var1 = 0;
var2 = ggg * 6;
var3 = 10;
var4 = 100 / ((205 / 2) * 0);
var5 = (45 * var3) - 80 / 3) + var1;
var6 = (-(45 * 20 - 1105 + (8 * 6)));
var7 = (1 + (a * d) * 78 - 136);
var8  (4 * 6 - (var1);

bool1 = (var1 AND var2);
bool2 = (var1 or var3);
bool3 = (1 or 0);
bool4 = (0 and 1);
bool5 = (not 1);
bool6 = (not 0);
bool7 = not (1 or 0);
bool8 = not (1 and 0);
bool9 = (NOT 0) AND 0;
bool10 = (NOT 1) AND 0;
bool11 = (NOT 0) AND 1;
bool12 = (NOT 1) AND 1;
bool13 = (NOT 0) OR 0;
bool14 = (NOT 1) OR 0;
bool15 = (NOT 0) OR 1;
bool16 = (NOT 1) OR 1;

LongLongLongLong = 500;
LongLongLongLongLongLongLongLongLongLongLongLongLongLongLongLong = 2 * 2;

longVar0 = (534 + 1234 * var6 / 3 - (1 + 3456 * 200));
longVar1 = 8012301203 / ((longVar0 / 1234) * 352435131);
longVar2 = (3456 * 53 - 7831334 + 3) + 1234;
longVar3 = a / ((1143 / 1234) * longVar4);
longVar4 = (3456 * 53 - b + 3) + 1234;
longVar5 = 8012301203 / ((longVar0 / 1234) * longVar5);
longVar6 = (3456 * longVar1 - 7831334 + 3) + 1234;
longVar7 = a / ((1143 / 1234) * longVar4);
longVar8 = (3456 * 53 - b + 3) + 1234;
longVar9 = longVar6 / ((longVar0 / 1234) * longVar5);
longVar10 = (longVar7 * longVar1 - 7831334 + 3) + 1234;
longVar11 = a / ((1143 / 1234) * longVar4);
longVar12 = (3456 * 53 - longVar7 + 3) + 1234;
longVar13 = longVar13 / ((longVar0 / 1234) * longVar5);
longVar14 = (3456 * longVar1 - 7831334 + 3) + longVar2;

longexpr0 = (10 + b * a3 / 3 - (1 +100000 * 200));
longexpr1 =7631455564/((857/54)*3131);
longexpr2=(3456*53-7831334/3)+28132;
d=(-(45*76-1223+(8*78)));
____var____ = (1 + (a *d) * 78 - 136);
useNotDefExpr = (4*6-ch);

error1 = (10 + 10;
error2 = 10 + 10);
error3 = (longVar14 + 10);
error4 = (10 + longVar14);
x x 5;
x =;
5 =;
error = error;
error5 = ((-(45 * (20) - 1105 + (8 * 6)));
error6 = (-(45 * (20) - (1105 + (8 * 6)));

a = 0;
b = 10;
c = 20;
f = 10;
x = 5;
recall foR(f == (5 * 0));
RecAll FoR((f == 80 - f));
RECAll For((f > 6 + 50));
reCall FOr((f >= 15 + 28));
recALL fOR((f <= 26));
ReCaLl fOr((f != 54 - a));
ReCaLl fOr(f AND (54 - 10));
REcaLL FOR((25) OR (20 * 9));
REcaLL FOR((25 OR (a * 9));

recall IN 5;
recalL In c;
Recall in (b+35*c);
Recall in (b+35+*c);
rEcall iN 678-90*0+a1;
rEcall iN a111;

reCall ALL;
recAll All;

recaLl Rest;
recalL REst in;

REcall Next 5;
REcAll nExt a;
REcaLL NExt(b + 35 * c);
ReCall NEXt 678 - 90 * 0 + a1;

recAlL RECORD 5;
recall rECOrd a;
recall reCOrD (b + 35 * c);
recall recoRd 678 - 90 * 0 + a1;

recall whilE(d == (25 + 30));
recall whILE((d == 25 + 30));
recall WHIle((d > 25 + 30));
recall WhIlE((d >= 25 + 30));
recall WhIlE((d =< 25 + 30));
recall whILE((d <= 25 + 30));
recall whILE((d => 25 + 30));
recall wHILe((d != 25 + 30));
Recall WHILe((d == 25 + 30));

recall whilE(d == (var1 + 30));
recall whILE((d == 25 + var2));
recall WHIle((d or 25 + 30));
recall WhIlE((d >= 25 + longvar3));
recall WhIlE((d =< 25 + h));
recall whILE((d <= k + 30));
recall whILE((d and d + 30));
recall wHILe((d != 25 + 30));
Recall WHILe((d == 25 + 30));

REcAll Nooptimize;
RECALl nooPTIMIZE;

RECAlL All fOr((d != 25 + 30)) wHILe((d != 25 + 30)) iN 678 - 90 * 0 + a1;
ReCALL REst WhIlE((d >= 25 + 30)) nooPTIMIZE;
recall NEXt 678 - 90 * 0 + a1 iN 678 - 90 * 0 + a1;
ReCALL REst WhIlE((d >= 25 + 30)) nooPTIMIZE iN (678!=4);
ReCALL REst WhIlE((d > 25)) nooPTIMIZE iN 678 > 90 * 0;
ReCALL REst WhIlE((1 and not d)) nooPTIMIZE iN (670 == 90 * 0);
ReCALL REst WhIlE((d >= 25 + 30)) nooPTIMIZE iN 678 - 90 * 0 + a1;
ReCALL REst WhIlE(not 1 and not not not not not 0) nooPTIMIZE iN 678 - 90 * 0 + a1;
ReCALL REst WhIlE(not 1 0 not and 1) nooPTIMIZE iN b2;

recall wHILe((d != 500));
recall wHILe((x = (d ==500)));
recall wHILe((25!= 25 + 30 / (30 and x)));
x = 1;
recall wHILe((x / 0));
recall wHILe((x!= x + x / 0));
recall wHILe((d != 25 + 30));
x = x + 10;
ReCALL REst WhIlE(x*x) nooPTIMIZE iN 100/x-10;
ReCALL REst WhIlE(x*(-1)) nooPTIMIZE iN (-10*(-29)+200/(-3));
ReCALL WhIlE((d >= 25 + 30)) iN x;
